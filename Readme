# Steakhouse Restaurant Management System

## Description

The Steakhouse Restaurant Management System is a simple console application designed to manage a steakhouse restaurant's menu and orders. This project showcases basic concepts of Object-Oriented Programming (OOP) using C++. The system allows the user to display the menu, take new orders, and view all placed orders. It simulates a real-time scenario where a restaurant specializes in various types of steaks and provides functionality to handle customer orders effectively.

## Features

* **Display Menu:** View a list of available steaks and their prices.
* **Take Order:** Add items to a new order by entering item IDs. The order can be finalized by entering `0`.
* **Display Orders:** View all placed orders along with their details, including item names, prices, and total cost.
* **Validation:** Input validation is performed to ensure that only valid item IDs and choices are processed.




## Usage

### Display Menu

1. Choose option 1 from the menu.
2. The application will display a list of available steaks along with their prices.

### Take Order

1. Choose option 2 from the menu.
2. Enter the item IDs of the steaks you wish to add to the order.
3. Enter `0` to finalize the order.
4. The system will confirm that the order has been placed successfully.

### Display Orders

1. Choose option 3 from the menu.
2. The application will display all orders along with their details, including item names, prices, and total cost.

### Exit

1. Choose option 4 from the menu.
2. The application will exit and display a thank you message.

## Code Structure

* **MenuItem Class:** Represents a menu item with a name and price.
* **Order Class:** Represents a customer order with an ID and a list of menu items.
* **Restaurant Class:** Manages the menu, handles orders, and provides functionality to display the menu and orders.
* **Main Function:** Provides a user interface to interact with the restaurant system, including menu options and input handling.

## Dependencies

This project requires a C++ compiler that supports C++11 or later.

## Contributing

If you would like to contribute to this project, please follow these steps:

1. Fork the repository.
2. Create a new branch (`git checkout -b feature-branch`).
3. Make your changes and commit (`git commit -am 'Add new feature'`).
4. Push to the branch (`git push origin feature-branch`).
5. Create a new Pull Request.

## License

This project is licensed under the MIT License - see the LICENSE file for details.

## Contact

For any questions or issues, please contact:

* **Name:** Your Name
* **Email:** your.email@example.com
* **GitHub:** yourusername
